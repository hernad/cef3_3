// Copyright (c) 2012 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#ifndef CEF_LIBCEF_DLL_CTOCPP_REQUEST_HANDLER_CTOCPP_H_
#define CEF_LIBCEF_DLL_CTOCPP_REQUEST_HANDLER_CTOCPP_H_
#pragma once

#ifndef BUILDING_CEF_SHARED
#pragma message("Warning: "__FILE__" may be accessed DLL-side only")
#else  // BUILDING_CEF_SHARED

#include "include/cef_request_handler.h"
#include "include/capi/cef_request_handler_capi.h"
#include "libcef_dll/ctocpp/ctocpp.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class CefRequestHandlerCToCpp
    : public CefCToCpp<CefRequestHandlerCToCpp, CefRequestHandler,
        cef_request_handler_t> {
 public:
  explicit CefRequestHandlerCToCpp(cef_request_handler_t* str)
      : CefCToCpp<CefRequestHandlerCToCpp, CefRequestHandler,
          cef_request_handler_t>(str) {}
  virtual ~CefRequestHandlerCToCpp() {}

  // CefRequestHandler methods
  virtual bool OnBeforeResourceLoad(CefRefPtr<CefBrowser> browser,
      CefRefPtr<CefFrame> frame, CefRefPtr<CefRequest> request) OVERRIDE;
  virtual CefRefPtr<CefResourceHandler> GetResourceHandler(
      CefRefPtr<CefBrowser> browser, CefRefPtr<CefFrame> frame,
      CefRefPtr<CefRequest> request) OVERRIDE;
  virtual void OnResourceRedirect(CefRefPtr<CefBrowser> browser,
      CefRefPtr<CefFrame> frame, const CefString& old_url,
      CefString& new_url) OVERRIDE;
  virtual bool GetAuthCredentials(CefRefPtr<CefBrowser> browser,
      CefRefPtr<CefFrame> frame, bool isProxy, const CefString& host, int port,
      const CefString& realm, const CefString& scheme,
      CefRefPtr<CefAuthCallback> callback) OVERRIDE;
  virtual bool OnQuotaRequest(CefRefPtr<CefBrowser> browser,
      const CefString& origin_url, int64 new_size,
      CefRefPtr<CefQuotaCallback> callback) OVERRIDE;
  virtual CefRefPtr<CefCookieManager> GetCookieManager(
      CefRefPtr<CefBrowser> browser, const CefString& main_url) OVERRIDE;
  virtual void OnProtocolExecution(CefRefPtr<CefBrowser> browser,
      const CefString& url, bool& allow_os_execution) OVERRIDE;
  virtual bool OnBeforePluginLoad(CefRefPtr<CefBrowser> browser,
      const CefString& url, const CefString& policy_url,
      CefRefPtr<CefWebPluginInfo> info) OVERRIDE;
};

#endif  // BUILDING_CEF_SHARED
#endif  // CEF_LIBCEF_DLL_CTOCPP_REQUEST_HANDLER_CTOCPP_H_

